angular.module("webapp",["ngRoute","restangular","ui.bootstrap"]).config(["$routeProvider","RestangularProvider",function(e,t){e.when("/",{templateUrl:"home/home.html",controller:"HomeCtrl"}).when("/forms",{templateUrl:"forms/forms.html",controller:"FormsCtrl"}).when("/dialogs",{templateUrl:"dialogs/dialogs.html",controller:"DialogsCtrl"}).when("/tables",{templateUrl:"tables/tables.html",controller:"TablesCtrl"}).when("/mongodb",{templateUrl:"mongodb/mongodb.html",controller:"MongodbCtrl"}).when("/passport",{templateUrl:"passport/passport.html",controller:"PassportCtrl"}).when("/about",{templateUrl:"about/about.html"}).otherwise({redirectTo:"/"}),t.setResponseExtractor(function(e){return e.payload}),t.setRestangularFields({id:"_id"})}]),angular.module("webapp").controller("ModalInstanceCtrl",["$scope","$modalInstance","items",function(e,t,n){e.items=n,e.selected={item:e.items[0]},e.ok=function(){t.close(e.selected.item)},e.cancel=function(){t.dismiss("cancel")}}]),angular.module("webapp").controller("DialogsCtrl",["$scope","alertService","$modal",function(e,t,n){e.success=function(e){t.success(e)},e.info=function(e){t.info(e)},e.warning=function(e){t.warning(e)},e.error=function(e){t.error(e)},e.items=["Chuck Norris","Jean Claude Van Damme","Bruce Willis","Arnold Schwarzenegger"],e.selected=e.items[0],e.open=function(){var t=n.open({templateUrl:"myModalContent",controller:"ModalInstanceCtrl",resolve:{items:function(){return e.items}}});t.result.then(function(t){e.selected=t})}}]),angular.module("webapp").controller("FormsCtrl",["$scope","$http",function(e,t){e.birthDate=new Date(1975,0,29),e.firstName="Thomas",e.lastName="Haukland",e.email="thomas.haukland@gmail.com",e.sex="male",e.possibleInterests=["soccer","billiards","ping pong","tv","bridge","running","junk food"],e.selectedInterests={},e.open=function(t){t.preventDefault(),t.stopPropagation(),e.opened=!0},e.format="yyyy-MM-dd",t.get("/api/backgrounds").success(function(t){e.backgrounds=t}),window.data=e,e.$watch("selectedBackground",function(e){e&&$("html").css("background-image","url(/assets/img/backgrounds/"+e+")")})}]),angular.module("webapp").controller("HomeCtrl",["$scope","$http",function(e,t){function n(e){var t=[];if(e)for(var n in e)t.push({name:n,value:e[n]});return t}t.get("home/package.json").success(function(t){t.dependencies=n(t.dependencies),t.devDependencies=n(t.devDependencies),e.server=t}),t.get("home/bower.json").success(function(t){t.dependencies=n(t.dependencies),t.devDependencies=n(t.devDependencies),e.client=t})}]),angular.module("webapp").factory("alertService",[function(){var e={};return e.success=toastr.success,e.info=toastr.info,e.warning=toastr.warning,e.error=toastr.error,e}]),angular.module("webapp").factory("authService",["$http",function(e){var t={},n=e.get("/auth/account");return t.getAccount=function(e){n.then(function(t){e(t.data)})},t.logout=function(t){e.get("/auth/logout").then(function(){n=e.get("/auth/account"),t()})},t}]),angular.module("webapp").directive("datatables",function(){return function(e,t,n){var a={bStateSave:!1,bJQueryUI:!1,bPaginate:!0,bLengthChange:!0,bFilter:!0,bInfo:!0,bDestroy:!0,sPaginationType:"bs_normal"};n.datatables&&n.datatables.length>0&&(a=$.extend(a,e.$eval(n.datatables))),n.columns&&(a.columns=e.$eval(n.columns)),n.sorting&&(a.aaSorting=e.$eval(n.sorting)),n.fnRowCallback&&(a.fnRowCallback=e.$eval(n.fnRowCallback));var o=t.dataTable(a),r=$(o),c=r.closest(".dataTables_wrapper").find("div[id$=_filter] input");c.attr("placeholder","Search"),c.addClass("form-control input-sm");var l=r.closest(".dataTables_wrapper").find("div[id$=_length] select");l.addClass("form-control input-sm"),r.bind("page",function(e){window.console&&console.log("pagination event:",e)}),e.$watch(n.data,function(t){var a=t||null;a&&(o.fnClearTable(),o.fnAddData(e.$eval(n.data)))},!0)}}),angular.module("webapp").directive("bsNavbar",["$location",function(e){"use strict";return{restrict:"A",link:function(t,n){t.$watch(function(){return e.path()},function(e){$("li[data-match-route]",n).each(function(t,n){var a=angular.element(n),o=a.attr("data-match-route"),r=new RegExp("^"+o+"$",["i"]);r.test(e)?a.addClass("active"):a.removeClass("active")})})}}}]),angular.module("webapp").factory("socket",["$rootScope",function(e){var t=window.io.connect(),n={};return n.join=function(e){n.emit("join",e)},n.on=function(n,a){t.on(n,function(){var n=arguments;e.$apply(function(){a.apply(t,n)})})},n.emit=function(n,a,o){t.emit(n,a,function(){var n=arguments;e.$apply(function(){o&&o.apply(t,n)})})},n}]),angular.module("webapp").controller("MongodbCtrl",["$scope","Restangular",function(e,t){var n=t.all("api/v1/Todo");n.getList().then(function(t){e.todos=t}),e["delete"]=function(t){t.remove().then(function(){e.todos=_.without(e.todos,t)})},e.save=function(e){e.put()},e.create=function(){var t={text:e.newText,done:!1};n.post(t).then(function(){e.todos.push(t)})}}]),angular.module("webapp").controller("PassportCtrl",["$scope","$http","authService",function(e,t,n){e.loggedIn=!1,n.getAccount(function(t){e.account=t,e.loggedIn=t&&t.id}),e.logout=function(){n.logout(function(){delete e.account,e.loggedIn=!1})}}]),angular.module("webapp").factory("carsProvider",[function(){return{cars:[{name:"1948 Porsche 356-A Roadster",price:53.9,category:"Classic Cars",action:"x"},{name:"1948 Porsche Type 356 Roadster",price:62.16,category:"Classic Cars",action:"x"},{name:"1949 Jaguar XK 120",price:47.25,category:"Classic Cars",action:"x"},{name:"1936 Harley Davidson El Knucklehead",price:24.23,category:"Motorcycles",action:"x"},{name:"1957 Vespa GS150",price:32.95,category:"Motorcycles",action:"x"},{name:"1960 BSA Gold Star DBD34",price:37.32,category:"Motorcycles",action:"x"},{name:"1900s Vintage Bi-Plane",price:34.25,category:"Planes",action:"x"},{name:"1900s Vintage Tri-Plane",price:36.23,category:"Planes",action:"x"},{name:"1928 British Royal Navy Airplane",price:66.74,category:"Planes",action:"x"},{name:"1980s Black Hawk Helicopter",price:77.27,category:"Planes",action:"x"},{name:"ATA: B757-300",price:59.33,category:"Planes",action:"x"}]}}]),angular.module("webapp").controller("TablesCtrl",["$scope","carsProvider","Restangular","socket",function(e,t,n,a){var o=n.all("api/v1/Todo"),r=function(e){var t=moment(e.created);e.createdTextual=t.fromNow()};o.getList().then(function(t){_.each(t,r),e.todos=t}),e.todoColumnDefs=[{data:"text"},{data:"done"},{data:"createdTextual"}],e.sorting=[[2,"desc"]],e.message="",e.myCallback=function(t,n){return $("td:eq(2)",t).bind("click",function(){e.$apply(function(){e.someClickHandler(n)})}),t},e.someClickHandler=function(t){e.message="clicked: "+t.price},e.columnDefs=[{data:"category"},{data:"name"},{data:"price"}],e.sampleProductCategories=t.cars,a.on("newTodo",function(t){e.todos.push(t)})}]);
//# sourceMappingURL=data:application/json;base64,